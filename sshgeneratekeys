#!/bin/bash
#
# @author Zeus Intuivo <zeus@intuivo.com>
#
#
sudo echo " Hi"

PROVIDED_USER=""
if [ ! -z "${1}" ] ;  then
    PROVIDED_USER="${1}"
else
	echo " Error"
	echo " "
	echo " ssh_generatekeys username    "
	echo " "
	echo " expected"
	echo " "
	exit 1
fi


	# Make sure the user is in their home directory
	cd ~/

	# Prompt for a username and host
	printf "Please enter email : "
	read EMAIL


	# Do the key generation

	mkdir -p ~/.ssh/
	chmod 700 ~/.ssh/
	cd ~/.ssh/
	OUTPUT_FOLDER=$(pwd)
	touch ${OUTPUT_FOLDER}/authorized_keys
	chmod 600 ${OUTPUT_FOLDER}/authorized_keys


read -p "Correct Output File » ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa »? yes/no: " -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then


	ssh-keygen -t rsa -b 4096 -C "${EMAIL}" -f ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa

	chmod 400 ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa
	#chmod 600 ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa

	cat ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub >> ${OUTPUT_FOLDER}/authorized_keys

	chmod 600 ${OUTPUT_FOLDER}/authorized_keys

	ssh-add ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa

	ssh-add -l  || ssh-add -l -E md5




function cpy {
# REF: https://superuser.com/questions/472598/pbcopy-for-windows
# I'm using the Git Bash command shell for Windows, and as someone noted above,
# using clip is very annoying, because it also copies the carriage return at the
# end of the output of any command. So I wrote this function to address it:
#
# So for example:
#
# $ pwd | cpy  # copies directory path
#
# $ git branch | cpy # copies current branch of git repo to clipboard
#
while read data; do     # reads data piped in to cpy
    echo "$data" | cat > /dev/clipboard     # echos the data and writes that to /dev/clipboard
done
tr -d '\n' < /dev/clipboard > /dev/clipboard     # removes new lines from the clipboard
}


function copy_to_clipboard() {
	# check operation systems
	if [[ "$(uname)" == "Darwin" ]] ; then
	  # Do something under Mac OS X platform
	  pbcopy < ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub
	  if [ $0 == 0 ] ; then
		  echo "The new key was copied to your clipboard"
	  else
		  echo "Could not copy to clipboard. Missing pbcopy."
		  echo "You new key is located in ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub"
	  fi
	elif [[ "$(expr substr $(uname -s) 1 5)" == "Linux" ]] ; then
	  # Do something under GNU/Linux platform
	  # ubuntu lsb_release -i | sed 's/Distributor\ ID://g' = \tUbuntu\n
	  xclip -sel clip < ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub
	  if [ $0 == 0 ] ; then
		  echo "The new key was copied to your clipboard"
	  else
		  echo "Could not copy to clipboard. Missing xclip."
		  echo "You new key is located in ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub"
	  fi
	elif [[ "$(expr substr $(uname -s) 1 10)" == "MINGW32_NT" ]] ; then
	  # Do something under Windows NT platform
	  cat ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub | cpy
	  # cat ~/.ssh/id_rsa.pub | clip
	  # nothing here
	  if [ $0 == 0 ] ; then
		  echo "The new key was copied to your clipboard"
	  else
		  echo "Could not copy to clipboard."
		  echo "You new key is located in ${OUTPUT_FOLDER}/${PROVIDED_USER}_rsa.pub"
	  fi
	fi

}



fi